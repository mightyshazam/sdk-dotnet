// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: temporal/api/operatorservice/v1/service.proto
// </auto-generated>
// Original file comments:
// The MIT License
//
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Temporal.Api.OperatorService.V1 {
  /// <summary>
  /// OperatorService API defines how Temporal SDKs and other clients interact with the Temporal server
  /// to perform administrative functions like registering a search attribute or a namespace.
  /// APIs in this file could be not compatible with Temporal Cloud, hence it's usage in SDKs should be limited by
  /// designated APIs that clearly state that they shouldn't be used by the main Application (Workflows &amp; Activities) framework.
  /// </summary>
  public static partial class OperatorService
  {
    static readonly string __ServiceName = "temporal.api.operatorservice.v1.OperatorService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporal.Api.OperatorService.V1.AddSearchAttributesRequest> __Marshaller_temporal_api_operatorservice_v1_AddSearchAttributesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporal.Api.OperatorService.V1.AddSearchAttributesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporal.Api.OperatorService.V1.AddSearchAttributesResponse> __Marshaller_temporal_api_operatorservice_v1_AddSearchAttributesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporal.Api.OperatorService.V1.AddSearchAttributesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporal.Api.OperatorService.V1.RemoveSearchAttributesRequest> __Marshaller_temporal_api_operatorservice_v1_RemoveSearchAttributesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporal.Api.OperatorService.V1.RemoveSearchAttributesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporal.Api.OperatorService.V1.RemoveSearchAttributesResponse> __Marshaller_temporal_api_operatorservice_v1_RemoveSearchAttributesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporal.Api.OperatorService.V1.RemoveSearchAttributesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporal.Api.OperatorService.V1.ListSearchAttributesRequest> __Marshaller_temporal_api_operatorservice_v1_ListSearchAttributesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporal.Api.OperatorService.V1.ListSearchAttributesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporal.Api.OperatorService.V1.ListSearchAttributesResponse> __Marshaller_temporal_api_operatorservice_v1_ListSearchAttributesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporal.Api.OperatorService.V1.ListSearchAttributesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporal.Api.OperatorService.V1.DeleteNamespaceRequest> __Marshaller_temporal_api_operatorservice_v1_DeleteNamespaceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporal.Api.OperatorService.V1.DeleteNamespaceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporal.Api.OperatorService.V1.DeleteNamespaceResponse> __Marshaller_temporal_api_operatorservice_v1_DeleteNamespaceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporal.Api.OperatorService.V1.DeleteNamespaceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporal.Api.OperatorService.V1.DeleteWorkflowExecutionRequest> __Marshaller_temporal_api_operatorservice_v1_DeleteWorkflowExecutionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporal.Api.OperatorService.V1.DeleteWorkflowExecutionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporal.Api.OperatorService.V1.DeleteWorkflowExecutionResponse> __Marshaller_temporal_api_operatorservice_v1_DeleteWorkflowExecutionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporal.Api.OperatorService.V1.DeleteWorkflowExecutionResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporal.Api.OperatorService.V1.AddSearchAttributesRequest, global::Temporal.Api.OperatorService.V1.AddSearchAttributesResponse> __Method_AddSearchAttributes = new grpc::Method<global::Temporal.Api.OperatorService.V1.AddSearchAttributesRequest, global::Temporal.Api.OperatorService.V1.AddSearchAttributesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddSearchAttributes",
        __Marshaller_temporal_api_operatorservice_v1_AddSearchAttributesRequest,
        __Marshaller_temporal_api_operatorservice_v1_AddSearchAttributesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporal.Api.OperatorService.V1.RemoveSearchAttributesRequest, global::Temporal.Api.OperatorService.V1.RemoveSearchAttributesResponse> __Method_RemoveSearchAttributes = new grpc::Method<global::Temporal.Api.OperatorService.V1.RemoveSearchAttributesRequest, global::Temporal.Api.OperatorService.V1.RemoveSearchAttributesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveSearchAttributes",
        __Marshaller_temporal_api_operatorservice_v1_RemoveSearchAttributesRequest,
        __Marshaller_temporal_api_operatorservice_v1_RemoveSearchAttributesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporal.Api.OperatorService.V1.ListSearchAttributesRequest, global::Temporal.Api.OperatorService.V1.ListSearchAttributesResponse> __Method_ListSearchAttributes = new grpc::Method<global::Temporal.Api.OperatorService.V1.ListSearchAttributesRequest, global::Temporal.Api.OperatorService.V1.ListSearchAttributesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSearchAttributes",
        __Marshaller_temporal_api_operatorservice_v1_ListSearchAttributesRequest,
        __Marshaller_temporal_api_operatorservice_v1_ListSearchAttributesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporal.Api.OperatorService.V1.DeleteNamespaceRequest, global::Temporal.Api.OperatorService.V1.DeleteNamespaceResponse> __Method_DeleteNamespace = new grpc::Method<global::Temporal.Api.OperatorService.V1.DeleteNamespaceRequest, global::Temporal.Api.OperatorService.V1.DeleteNamespaceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteNamespace",
        __Marshaller_temporal_api_operatorservice_v1_DeleteNamespaceRequest,
        __Marshaller_temporal_api_operatorservice_v1_DeleteNamespaceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporal.Api.OperatorService.V1.DeleteWorkflowExecutionRequest, global::Temporal.Api.OperatorService.V1.DeleteWorkflowExecutionResponse> __Method_DeleteWorkflowExecution = new grpc::Method<global::Temporal.Api.OperatorService.V1.DeleteWorkflowExecutionRequest, global::Temporal.Api.OperatorService.V1.DeleteWorkflowExecutionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteWorkflowExecution",
        __Marshaller_temporal_api_operatorservice_v1_DeleteWorkflowExecutionRequest,
        __Marshaller_temporal_api_operatorservice_v1_DeleteWorkflowExecutionResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Temporal.Api.OperatorService.V1.ServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for OperatorService</summary>
    public partial class OperatorServiceClient : grpc::ClientBase<OperatorServiceClient>
    {
      /// <summary>Creates a new client for OperatorService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public OperatorServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for OperatorService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public OperatorServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected OperatorServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected OperatorServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// AddSearchAttributes add custom search attributes.
      ///
      /// Returns ALREADY_EXISTS status code if a Search Attribute with any of the specified names already exists
      /// Returns INTERNAL status code with temporal.api.errordetails.v1.SystemWorkflowFailure in Error Details if registration process fails,
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Temporal.Api.OperatorService.V1.AddSearchAttributesResponse AddSearchAttributes(global::Temporal.Api.OperatorService.V1.AddSearchAttributesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSearchAttributes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AddSearchAttributes add custom search attributes.
      ///
      /// Returns ALREADY_EXISTS status code if a Search Attribute with any of the specified names already exists
      /// Returns INTERNAL status code with temporal.api.errordetails.v1.SystemWorkflowFailure in Error Details if registration process fails,
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Temporal.Api.OperatorService.V1.AddSearchAttributesResponse AddSearchAttributes(global::Temporal.Api.OperatorService.V1.AddSearchAttributesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddSearchAttributes, null, options, request);
      }
      /// <summary>
      /// AddSearchAttributes add custom search attributes.
      ///
      /// Returns ALREADY_EXISTS status code if a Search Attribute with any of the specified names already exists
      /// Returns INTERNAL status code with temporal.api.errordetails.v1.SystemWorkflowFailure in Error Details if registration process fails,
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Temporal.Api.OperatorService.V1.AddSearchAttributesResponse> AddSearchAttributesAsync(global::Temporal.Api.OperatorService.V1.AddSearchAttributesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSearchAttributesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AddSearchAttributes add custom search attributes.
      ///
      /// Returns ALREADY_EXISTS status code if a Search Attribute with any of the specified names already exists
      /// Returns INTERNAL status code with temporal.api.errordetails.v1.SystemWorkflowFailure in Error Details if registration process fails,
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Temporal.Api.OperatorService.V1.AddSearchAttributesResponse> AddSearchAttributesAsync(global::Temporal.Api.OperatorService.V1.AddSearchAttributesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddSearchAttributes, null, options, request);
      }
      /// <summary>
      /// RemoveSearchAttributes removes custom search attributes.
      ///
      /// Returns NOT_FOUND status code if a Search Attribute with any of the specified names is not registered
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Temporal.Api.OperatorService.V1.RemoveSearchAttributesResponse RemoveSearchAttributes(global::Temporal.Api.OperatorService.V1.RemoveSearchAttributesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveSearchAttributes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RemoveSearchAttributes removes custom search attributes.
      ///
      /// Returns NOT_FOUND status code if a Search Attribute with any of the specified names is not registered
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Temporal.Api.OperatorService.V1.RemoveSearchAttributesResponse RemoveSearchAttributes(global::Temporal.Api.OperatorService.V1.RemoveSearchAttributesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveSearchAttributes, null, options, request);
      }
      /// <summary>
      /// RemoveSearchAttributes removes custom search attributes.
      ///
      /// Returns NOT_FOUND status code if a Search Attribute with any of the specified names is not registered
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Temporal.Api.OperatorService.V1.RemoveSearchAttributesResponse> RemoveSearchAttributesAsync(global::Temporal.Api.OperatorService.V1.RemoveSearchAttributesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveSearchAttributesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RemoveSearchAttributes removes custom search attributes.
      ///
      /// Returns NOT_FOUND status code if a Search Attribute with any of the specified names is not registered
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Temporal.Api.OperatorService.V1.RemoveSearchAttributesResponse> RemoveSearchAttributesAsync(global::Temporal.Api.OperatorService.V1.RemoveSearchAttributesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveSearchAttributes, null, options, request);
      }
      /// <summary>
      /// ListSearchAttributes returns comprehensive information about search attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Temporal.Api.OperatorService.V1.ListSearchAttributesResponse ListSearchAttributes(global::Temporal.Api.OperatorService.V1.ListSearchAttributesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSearchAttributes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ListSearchAttributes returns comprehensive information about search attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Temporal.Api.OperatorService.V1.ListSearchAttributesResponse ListSearchAttributes(global::Temporal.Api.OperatorService.V1.ListSearchAttributesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSearchAttributes, null, options, request);
      }
      /// <summary>
      /// ListSearchAttributes returns comprehensive information about search attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Temporal.Api.OperatorService.V1.ListSearchAttributesResponse> ListSearchAttributesAsync(global::Temporal.Api.OperatorService.V1.ListSearchAttributesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSearchAttributesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ListSearchAttributes returns comprehensive information about search attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Temporal.Api.OperatorService.V1.ListSearchAttributesResponse> ListSearchAttributesAsync(global::Temporal.Api.OperatorService.V1.ListSearchAttributesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSearchAttributes, null, options, request);
      }
      /// <summary>
      /// DeleteNamespace synchronously deletes a namespace and asynchronously reclaims all namespace resources.
      /// (-- api-linter: core::0135::method-signature=disabled
      ///     aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
      /// (-- api-linter: core::0135::response-message-name=disabled
      ///     aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Temporal.Api.OperatorService.V1.DeleteNamespaceResponse DeleteNamespace(global::Temporal.Api.OperatorService.V1.DeleteNamespaceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteNamespace(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DeleteNamespace synchronously deletes a namespace and asynchronously reclaims all namespace resources.
      /// (-- api-linter: core::0135::method-signature=disabled
      ///     aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
      /// (-- api-linter: core::0135::response-message-name=disabled
      ///     aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Temporal.Api.OperatorService.V1.DeleteNamespaceResponse DeleteNamespace(global::Temporal.Api.OperatorService.V1.DeleteNamespaceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteNamespace, null, options, request);
      }
      /// <summary>
      /// DeleteNamespace synchronously deletes a namespace and asynchronously reclaims all namespace resources.
      /// (-- api-linter: core::0135::method-signature=disabled
      ///     aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
      /// (-- api-linter: core::0135::response-message-name=disabled
      ///     aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Temporal.Api.OperatorService.V1.DeleteNamespaceResponse> DeleteNamespaceAsync(global::Temporal.Api.OperatorService.V1.DeleteNamespaceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteNamespaceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DeleteNamespace synchronously deletes a namespace and asynchronously reclaims all namespace resources.
      /// (-- api-linter: core::0135::method-signature=disabled
      ///     aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
      /// (-- api-linter: core::0135::response-message-name=disabled
      ///     aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Temporal.Api.OperatorService.V1.DeleteNamespaceResponse> DeleteNamespaceAsync(global::Temporal.Api.OperatorService.V1.DeleteNamespaceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteNamespace, null, options, request);
      }
      /// <summary>
      /// DeleteWorkflowExecution deletes a closed workflow execution asynchronously (workflow must be completed or terminated before).
      /// This method is EXPERIMENTAL and may be changed or removed in a later release.
      /// (-- api-linter: core::0135::method-signature=disabled
      ///     aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
      /// (-- api-linter: core::0135::response-message-name=disabled
      ///     aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Temporal.Api.OperatorService.V1.DeleteWorkflowExecutionResponse DeleteWorkflowExecution(global::Temporal.Api.OperatorService.V1.DeleteWorkflowExecutionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteWorkflowExecution(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DeleteWorkflowExecution deletes a closed workflow execution asynchronously (workflow must be completed or terminated before).
      /// This method is EXPERIMENTAL and may be changed or removed in a later release.
      /// (-- api-linter: core::0135::method-signature=disabled
      ///     aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
      /// (-- api-linter: core::0135::response-message-name=disabled
      ///     aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Temporal.Api.OperatorService.V1.DeleteWorkflowExecutionResponse DeleteWorkflowExecution(global::Temporal.Api.OperatorService.V1.DeleteWorkflowExecutionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteWorkflowExecution, null, options, request);
      }
      /// <summary>
      /// DeleteWorkflowExecution deletes a closed workflow execution asynchronously (workflow must be completed or terminated before).
      /// This method is EXPERIMENTAL and may be changed or removed in a later release.
      /// (-- api-linter: core::0135::method-signature=disabled
      ///     aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
      /// (-- api-linter: core::0135::response-message-name=disabled
      ///     aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Temporal.Api.OperatorService.V1.DeleteWorkflowExecutionResponse> DeleteWorkflowExecutionAsync(global::Temporal.Api.OperatorService.V1.DeleteWorkflowExecutionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteWorkflowExecutionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DeleteWorkflowExecution deletes a closed workflow execution asynchronously (workflow must be completed or terminated before).
      /// This method is EXPERIMENTAL and may be changed or removed in a later release.
      /// (-- api-linter: core::0135::method-signature=disabled
      ///     aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
      /// (-- api-linter: core::0135::response-message-name=disabled
      ///     aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Temporal.Api.OperatorService.V1.DeleteWorkflowExecutionResponse> DeleteWorkflowExecutionAsync(global::Temporal.Api.OperatorService.V1.DeleteWorkflowExecutionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteWorkflowExecution, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override OperatorServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new OperatorServiceClient(configuration);
      }
    }

  }
}
#endregion
